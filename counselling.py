# -*- coding: utf-8 -*-
"""Counselling.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1-QNI9drJSAnRFyXxW6FUOXEvxZuh6cUv
"""

import pandas as pd
url='https://admissions.nic.in/wbjeeb/applicant/report/orcrreport.aspx?enc=Nm7QwHILXclJQSv2YVS+7t5O5EVrvqMhdk/bbq9ioFjahMV3TyfdCGo7ms/IlfkE'
tables = pd.read_html(url)

df=tables[0]

df.head()

df.info()

df.shape

df.isnull().sum()

df=df.drop(['Sr.No'],axis=1)

df.head()

df['Category'].unique()

df['Stream'].unique()

df['Quota'].unique()

df['Institute'].unique().size

!pip install ydata-profiling

import pandas as pd
    from ydata_profiling import ProfileReport

profile = ProfileReport(df, title="My DataFrame Profile")
profile.to_file("report.html")
from IPython.display import HTML
HTML(filename='report.html')

df.sample(5)

df['Round']=df['Round'].str.replace('Round ', '').astype(int)
df.head()



df[['College Name', 'Address']] = df['Institute'].str.split(',', n=1, expand=True)
df['College Name'] = df['College Name'].str.strip()
df['Address'] = df['Address'].str.strip()
display(df.head())

df=df.drop(['Institute'],axis=1)

df.sample(5)

df['Program'].unique()

df['Program'].duplicated()



tfw_programs = df[df['Program'].str.contains('TFW')]['Program'].unique()
display(tfw_programs)



df['Program'] = df['Program'].str.replace('TFW', '').str.strip()
display(df.head())

df['Program'].unique()

import re
df['Program'] = df['Program'].apply(lambda x: re.sub(r'\(.*\)', '', x)).str.strip()
df['Program'] = df['Program'].str.replace(',', '').str.strip()
display(df['Program'].unique())



display(df['Program'].unique())

computer_programs = df[df['Program'].str.contains('COMPUTER')]
display(computer_programs)

display(df['Program'].unique())

keywords = {
    'COMPUTER': 'CSE',
    'INFORMATION TECHNOLOGY': 'IT',
    'DATA SCIENCE': 'DS',
    'ARTIFICIAL INTELLIGENCE': 'AI',
    'CIVIL': 'CE',
    'MECHANICAL': 'ME',
    'ELECTRICAL': 'EE',
    'ELECTRONICS': 'ECE',
    'BIOMEDICAL': 'BME',
    'BIOTECH': 'BT',
    'CHEMICAL': 'CHE',
    'CERAMIC': 'CER',
    'METALLURGICAL': 'MME',
    'TEXTILE': 'TT',
    'FOOD': 'FT',
    'DAIRY': 'DT',
    'AGRICULTURAL': 'AG',
    'MARINE': 'MRE',
    'MINING': 'MN',
    'PHARM': 'PHARM',
    'ARCHITECTURAL': 'ARCH',
    'AUTOMOBILE': 'AUTO',
    'ROBOT': 'ROB',
    'PLANNING': 'BP',
    'PRODUCTION': 'PR'
}

def map_branch(x):
  x = str(x).strip().upper()
  x = x.replace("&", "AND")   # replace symbols
  x = x.replace("/", " ")     # split combos
  x = x.replace("-", " ")
  x = x.replace("  -", " ")
  for k,v in keywords.items():
    if k in x:
      return v
  return 'OTHER'

df['Program_Ref']=df['Program'].apply(map_branch)

df.sample(5)

df['Address'].unique()

df['Address']=df['Address'].replace("Group of Institutions","")

df.sample(5)

miss_addr=df.loc[df['Address'].isna(),'College Name']

miss_addr

df.loc[(df['College Name'].str.contains("Jadavpur",case=False)) & (df['Address'].isna()),"Address"]="Jadavpur"

df.loc[(df['College Name'].str.contains("Calcutta",case=False)) & (df['Address'].isna()),"Address"]="Kolkata"

df.sample(5)

